[{"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Login/Login.js":"1","/Users/codepoet/Desktop/Web Development/facebook-clone/src/index.js":"2","/Users/codepoet/Desktop/Web Development/facebook-clone/src/reducer.js":"3","/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Header/Header.js":"4","/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Sidebar/Sidebar.js":"5","/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Feed/MessageSender/MessageSender.js":"6","/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Feed/Story/Story.js":"7","/Users/codepoet/Desktop/Web Development/dev_space/client/src/index.js":"8","/Users/codepoet/Desktop/Web Development/dev_space/client/src/reducer.js":"9","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Header/Header.js":"10","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/Feed.js":"11","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/StoryReel/StoryReel.js":"12","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/Story/Story.js":"13","/Users/codepoet/Desktop/Web Development/dev_space/client/src/reportWebVitals.js":"14","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/MessageSender/MessageSender.js":"15","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Header/Toggle/Toggle.js":"16","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Sidebar/Sidebar.js":"17","/Users/codepoet/Desktop/Web Development/dev_space/client/src/StateProvider.js":"18","/Users/codepoet/Desktop/Web Development/dev_space/client/src/firebase.js":"19"},{"size":1131,"mtime":1612623447014,"results":"20","hashOfConfig":"21"},{"size":519,"mtime":1612385438627,"results":"22","hashOfConfig":"21"},{"size":399,"mtime":1612385438627,"results":"23","hashOfConfig":"21"},{"size":2686,"mtime":1612385438624,"results":"24","hashOfConfig":"21"},{"size":1539,"mtime":1612385438625,"results":"25","hashOfConfig":"21"},{"size":2738,"mtime":1612561307315,"results":"26","hashOfConfig":"21"},{"size":367,"mtime":1612385438623,"results":"27","hashOfConfig":"21"},{"size":519,"mtime":1612718295198,"results":"28","hashOfConfig":"29"},{"size":399,"mtime":1612718295198,"results":"30","hashOfConfig":"29"},{"size":2639,"mtime":1612731631051,"results":"31","hashOfConfig":"29"},{"size":1113,"mtime":1612719770971,"results":"32","hashOfConfig":"29"},{"size":1383,"mtime":1612718295193,"results":"33","hashOfConfig":"29"},{"size":367,"mtime":1612718295193,"results":"34","hashOfConfig":"29"},{"size":362,"mtime":1612718295198,"results":"35","hashOfConfig":"29"},{"size":2738,"mtime":1612720316213,"results":"36","hashOfConfig":"29"},{"size":2411,"mtime":1612731800524,"results":"37","hashOfConfig":"29"},{"size":1434,"mtime":1612731587979,"results":"38","hashOfConfig":"29"},{"size":369,"mtime":1612725765637,"results":"39","hashOfConfig":"29"},{"size":625,"mtime":1612719735073,"results":"40","hashOfConfig":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"b7hspe",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1tc1fga",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Login/Login.js",["83"],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/index.js",[],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/reducer.js",[],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Header/Header.js",["84"],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Sidebar/Sidebar.js",["85"],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Feed/MessageSender/MessageSender.js",["86"],"/Users/codepoet/Desktop/Web Development/facebook-clone/src/components/Dashboard/Feed/Story/Story.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/index.js",[],["87","88"],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/reducer.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Header/Header.js",["89","90","91"],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/Feed.js",["92","93","94"],"import React, { useEffect, useState } from 'react'\nimport './Feed.css'\nimport db from '../../../firebase'\n\nimport StoryReel from '../Feed/StoryReel/StoryReel'\nimport MessageSender from '../Feed/MessageSender/MessageSender'\nimport Post from '../Feed/Post/Post'\n\n\n\nfunction Feed() {\n    const[posts, setPosts] = useState([])\n\n    // Listens to any changes and rerenders when there are changes\n    // useEffect(() => {\n    //     db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n    //         setPosts(snapshot.docs.map(doc => ({ id: doc.id, data: doc.data() })))\n    //     ))\n    // }, [])\n\n    return (\n        <div className='feed'>\n            <StoryReel />\n            <MessageSender />\n\n            {posts.map(post => (\n                <Post\n                key={post.data.id}\n                profilePic={post.data.profilePic}\n                message={post.data.message}\n                timestamp={post.data.timestamp}\n                username={post.data.username}\n                image={post.data.image}\n            />\n            ))}\n        </div>\n    )\n}\n export default Feed;",["95","96"],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/StoryReel/StoryReel.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/Story/Story.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/reportWebVitals.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Feed/MessageSender/MessageSender.js",["97"],"import React, { useState } from 'react'\nimport './MessageSender.css'\nimport { useStateValue } from '../../../../StateProvider'\n\nimport { Avatar } from '@material-ui/core'\n\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\n\nimport db from '../../../../firebase'\nimport firebase from \"firebase\"\n\nfunction MessageSender() {\n    const [{user}, dispatch] = useStateValue()\n    const [input, setInput] = useState('')\n    const [imageURL, setImageUrl] = useState('')\n\n\n\n\n    const handleSubmit = e => {\n        // Preventing browser default behavior when enter is hit.\n        e.preventDefault();\n\n        // When user hits enter the db will collect the info and posted onto the Post Component inside of Feed\n        db.collection('posts').add({\n            message: input,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            profilePic: user.photoURL,\n            username:user.displayName,\n            image: imageURL\n        })\n\n         // Resetting the values when user hits enter\n    setInput('');\n    setImageUrl('');\n    }\n\n    return (\n        <div className=\"messageSender\">\n            <div className=\"messageSender__top\">\n                <Avatar\n                    src={user.photoURL}\n                />\n                <form>\n                    <input\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    type='text'\n                    className=\"messageSender__input\"\n                    placeholder={`What's on your mind, ${user.displayName}?`} />\n                    <input\n                    value={imageURL}\n                    onChange={(e) => setImageUrl(e.target.value)}\n                    placeholder=\"Image URL (Optional)\"/>\n\n                    <button onClick={handleSubmit} type=\"submit\">\n                        Hidden submit\n                    </button>\n                </form>\n            </div>\n            <div className=\"messageSender__bottom\">\n                <div className=\"messageSender__option\">\n                    <VideocamIcon style={{ color: \"red\"}} />\n                    <h3>Live Video</h3>\n                </div>\n\n                <div className=\"messageSender__option\">\n                <PhotoLibraryIcon style={{ color: \"green\"}} />\n                    <h3>Photo/Video</h3>\n                </div>\n                <div className=\"messageSender__option\">\n                <InsertEmoticonIcon style={{ color: \"orange\"}} />\n                    <h3>Feeling/Activity</h3>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default MessageSender\n","/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Header/Toggle/Toggle.js",[],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/components/Dashboard/Sidebar/Sidebar.js",["98","99"],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/StateProvider.js",["100"],"/Users/codepoet/Desktop/Web Development/dev_space/client/src/firebase.js",[],{"ruleId":"101","severity":1,"message":"102","line":10,"column":12,"nodeType":"103","messageId":"104","endLine":10,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":20,"column":20,"nodeType":"103","messageId":"104","endLine":20,"endColumn":28},{"ruleId":"101","severity":1,"message":"105","line":18,"column":20,"nodeType":"103","messageId":"104","endLine":18,"endColumn":28},{"ruleId":"101","severity":1,"message":"105","line":15,"column":20,"nodeType":"103","messageId":"104","endLine":15,"endColumn":28},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"101","severity":1,"message":"105","line":21,"column":20,"nodeType":"103","messageId":"104","endLine":21,"endColumn":28},{"ruleId":"101","severity":1,"message":"110","line":22,"column":12,"nodeType":"103","messageId":"104","endLine":22,"endColumn":16},{"ruleId":"101","severity":1,"message":"111","line":22,"column":18,"nodeType":"103","messageId":"104","endLine":22,"endColumn":25},{"ruleId":"101","severity":1,"message":"112","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"113","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":10},{"ruleId":"101","severity":1,"message":"114","line":12,"column":18,"nodeType":"103","messageId":"104","endLine":12,"endColumn":26},{"ruleId":"106","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"101","severity":1,"message":"105","line":15,"column":20,"nodeType":"103","messageId":"104","endLine":15,"endColumn":28},{"ruleId":"101","severity":1,"message":"117","line":18,"column":13,"nodeType":"103","messageId":"104","endLine":18,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":18,"column":20,"nodeType":"103","messageId":"104","endLine":18,"endColumn":28},{"ruleId":"101","severity":1,"message":"118","line":1,"column":49,"nodeType":"103","messageId":"104","endLine":1,"endColumn":57},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'useEffect' is defined but never used.","'db' is defined but never used.","'setPosts' is assigned a value but never used.",["119"],["120"],"'user' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]